//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ..\parser\JsonLT.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace JsonLT.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="JsonLTParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IJsonLTListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.json"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJson([NotNull] JsonLTParser.JsonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.json"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJson([NotNull] JsonLTParser.JsonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.obj"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObj([NotNull] JsonLTParser.ObjContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.obj"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObj([NotNull] JsonLTParser.ObjContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMember([NotNull] JsonLTParser.MemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.member"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMember([NotNull] JsonLTParser.MemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] JsonLTParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] JsonLTParser.ArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElements([NotNull] JsonLTParser.ElementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.elements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElements([NotNull] JsonLTParser.ElementsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement([NotNull] JsonLTParser.ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement([NotNull] JsonLTParser.ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPath([NotNull] JsonLTParser.PathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.path"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPath([NotNull] JsonLTParser.PathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.subpath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubpath([NotNull] JsonLTParser.SubpathContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.subpath"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubpath([NotNull] JsonLTParser.SubpathContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.foreach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeach([NotNull] JsonLTParser.ForeachContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.foreach"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeach([NotNull] JsonLTParser.ForeachContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.concatenation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcatenation([NotNull] JsonLTParser.ConcatenationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.concatenation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcatenation([NotNull] JsonLTParser.ConcatenationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] JsonLTParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] JsonLTParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="JsonLTParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpresion([NotNull] JsonLTParser.ExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="JsonLTParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpresion([NotNull] JsonLTParser.ExpresionContext context);
}
} // namespace JsonLT.Parser
